use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :chat, Chat.Endpoint,
  http: [port: {:system, "PORT"}],
  #url: [scheme: "https", host: "nameless-reaches-32969.herokuapp.com", port: 443],
  #cache_static_manifest: "priv/static/manifest.json",
  secret_key_base: System.get_env("SECRET_KEY_BASE") || "Gas2iVYFbejVRLsCEG662EUqINOge/UrCdg/YDyIAhnvaVfYliJ/iCckbM2MayE0",
  #check_origin: ["http://sling-chat.s3-website-us-west-2.amazonaws.com"]
  server: true

# Do not print debug messages in production
config :logger, level: :info

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :chat, Chat.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :chat, Chat.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :chat, Chat.Endpoint, server: true
#

config :guardian, Guardian,
  secret_key: System.get_env("GUARDIAN_SECRET_KEY") || "ebV17yY0xt/7jFu+uUJeg7LPi3yFpRE8fwyeByJ3eSlKA6Qq5Ft+mxPiPXkKK/FU"

config :chat, ChatWeb.Endpoint,
  secret_key_base: "X95Qnfjv5qpkIaR3OHRmll9XxJagr2qhF18uvWL3EX/ILOouLdl6pT/i2K2KAxuW"

# Configure your database
config :chat, Chat.Repo,
  adapter: Ecto.Adapters.MySQL,
  username: System.get_env("DB_USER") || "root",
  password: System.get_env("DB_PASS") || "root",
  database: System.get_env("DB_NAME") || "smolltolk_chat_prod",
  hostname: System.get_env("DB_HOST") || "db",
  pool_size: 15
